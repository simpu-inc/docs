{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI Simpu API",
    "description": "Simpu API Documentation",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.v1.simpu.co"
    }
  ],
  "security": [
    {
      "apiKeyAuth": []
    }
  ],
  "paths": {
    "/sms/send": {
      "post": {
        "description": "Send an SMS message",
        "requestBody": {
          "description": "SMS message object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendSMSRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "SMS response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SMS"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/email/send": {
      "post": {
        "description": "Send an Email",
        "requestBody": {
          "description": "Email object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailSendRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Email response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/lookup/phone": {
      "post": {
        "description": "Lookup a Phone",
        "requestBody": {
          "description": "Lookup phone object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LookupPhoneRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Lookup phone response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LookupPhone"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/otp/{id}": {
      "get": {
        "description": "Retrieve a single OTP based on the ID supplied",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of OTP to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OTP response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OTP"
                }
              }
            }
          },
          "404": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Revoke a single OTP based on the ID supplied",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of OTP to revoke",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OTP revoked",
            "content": {}
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/otp/request_token": {
      "post": {
        "description": "Request an OTP token",
        "requestBody": {
          "description": "OTP request object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OTPTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OTP response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OTP"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/otp/verify": {
      "post": {
        "description": "Verify an OTP token",
        "requestBody": {
          "description": "OTP verify request object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OTPVerifyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OTP response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OTP"
                }
              }
            }
          },
          "404": {
            "description": "Token not found or expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/otp/get_by_recipient": {
      "get": {
        "description": "Retrieve all OTPs based on the recipient supplied",
        "parameters": [
          {
            "name": "recipient",
            "in": "path",
            "description": "Recipient of OTPs to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OTP response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OTP"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SMS": {
        "required": [
          "id",
          "recipients",
          "is_trackable",
          "sender_id"
        ],
        "type": "object",
        "properties": {
          "id": {
              "description": "ID of the SMS message",
              "type": "string",
              "example": "674535b2b39158b9aae90188fcec23eb"
          },
          "recipients": {
            "description": "Recipients of the SMS message",
            "type": "array",
            "example": ["2348023456789"]
          },
          "sender_id": {
              "description": "Sender ID of the SMS message",
              "type": "string",
              "example": "Simpu",
              "maxLength": 11
          },
          "is_trackable": {
              "description": "This determines if links in the message should be tracked",
              "type": "boolean",
              "example": false
          },
          "content": {
              "description": "Content of the SMS message",
              "type": "string",
              "example": "Hello! World. This is a test message."
          },
          "external_ref": {
              "description": "This is a reference to the message in your system",
              "type": "string",
              "example": "674535b2b39158b9aae90188fcec23eb"
          },
          "callback": {
              "description": "This is the URL to receive delivery reports for the message",
              "type": "string",
              "example": "https://example.com/sms/delivery_report"
          },
          "template_id": {
              "description": "Template ID of the SMS message",
              "type": "string",
              "example": "674535b2b39158b9aae90188fcec23eb"
          },
          "personalisation": {
            "description": "Personalisation of the SMS message",
            "type": "array",
            "items": {
                "$ref": "#/components/schemas/Personalisation"
            }
          },
          "created_datetime": {
            "description": "Date and time the SMS was created",
            "type": "string",
            "example": "2024-06-28T23:56:38.128604+00:00"
          },
          "updated_datetime": {
            "description": "Date and time the SMS token was last updated, if any",
            "type": "string",
            "example": "2024-06-28T23:56:38.128604+00:00"
          }
        }
      },
      "Email": {
        "required": [
          "id",
          "sender_id",
          "recipients"
        ],
        "type": "object",
        "properties": {
          "id": {
              "description": "ID of the Email ",
              "type": "string",
              "example": "674535b2b39158b9aae90188fcec23eb"
          },
          "recipients": {
            "description": "Recipients of the Email",
            "type": "array",
            "example": ["mack@acme.com"]
          },
          "sender_id": {
              "description": "Sender ID of the Email",
              "type": "string",
              "example": "john@acme.com"
          },
          "external_ref": {
              "description": "This is a reference to the email in your system",
              "type": "string",
              "example": "674535b2b39158b9aae90188fcec23eb"
          },
          "callback": {
              "description": "This is the URL to receive delivery reports for the message",
              "type": "string",
              "example": "https://example.com/email/delivery_report"
          },
          "template_id": {
              "description": "Template ID of the Email message",
              "type": "string",
              "example": "674535b2b39158b9aae90188fcec23eb"
          },
          "from_name": {
              "description": "The sender of the email.",
              "type": "string",
              "example": "John from Acme"
          },
          "personalisation": {
            "description": "Personalisation of the Email message",
            "type": "array",
            "items": {
                "$ref": "#/components/schemas/PersonalisationEmail"
            }
          },
          "created_datetime": {
            "description": "Date and time the Email was created",
            "type": "string",
            "example": "2024-06-28T23:56:38.128604+00:00"
          },
          "updated_datetime": {
            "description": "Date and time the Email  was last updated, if any",
            "type": "string",
            "example": "2024-06-28T23:56:38.128604+00:00"
          }
        }
      },
      "LookupPhone": {
        "required": [
          "id",
          "phone"
        ],
        "type": "object",
        "properties": {
          "id": {
              "description": "ID of the phone",
              "type": "string",
              "example": "674535b2b39158b9aae90188fcec23eb"
          },
          "phone": {
            "description": "The phone number to be looked up",
            "type": "string",
            "example": "2348089672786"
          },
          "created_datetime": {
            "description": "Date and time the phone lookup was created",
            "type": "string",
            "example": "2024-06-28T23:56:38.128604+00:00"
          },
          "updated_datetime": {
            "description": "Date and time the phone lookup was last updated, if any",
            "type": "string",
            "example": "2024-06-28T23:56:38.128604+00:00"
          }
        }
      },
      "OTP": {
        "required": [
          "id",
          "recipient",
          "status",
          "status_desc",
          "created_datetime"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "ID of the OTP token",
            "type": "string",
            "example": "674535b2b39158b9aae90188fcec23eb"
          },
          "recipient": {
            "description": "Recipient of the OTP token",
            "type": "string",
            "example": "2348023456789"
          },
          "status": {
            "description": "Status of the OTP token",
            "type": "number",
            "example": 1
          },
          "status_desc": {
            "description": "Description of the status of the OTP token",
            "type": "string",
            "example": "SENT"
          },
          "created_datetime": {
            "description": "Date and time the OTP token was created",
            "type": "string",
            "example": "2024-06-28T23:56:38.128604+00:00"
          },
          "updated_datetime": {
            "description": "Date and time the OTP token was last updated, if any",
            "type": "string",
            "example": "2024-06-28T23:56:38.128604+00:00"
          }
        }
      },
      "Personalisation": {
        "required": [
          "to",
          "substitutions"
        ],
        "type": "object",
        "properties": {
          "to": {
            "description": "Recipient of the personalisation",
            "type": "string",
            "example": "2348023456789"
          },
          "substitutions": {
            "description": "Substitutions of the personalisation",
            "type": "object",
            "example": {
              "name": "John Doe"
            }
          }
        }
      },
      "PersonalisationEmail": {
        "required": [
          "to",
          "substitutions"
        ],
        "type": "object",
        "properties": {
          "to": {
            "description": "Recipient of the personalisation",
            "type": "string",
            "example": "mack@acme.com"
          },
          "substitutions": {
            "description": "Substitutions of the personalisation",
            "type": "object",
            "example": {
              "name": "Mack from Acme"
            }
          }
        }
      },
      "SendSMSRequest": {
        "type": "object",
        "properties": {
          "recipients": {
            "description": "Recipients of the SMS message, comma separated list of phone numbers",
            "type": "string",
            "example": "2348023456789, 2348098765432"
          },
          "sender_id": {
            "description": "Sender ID of the SMS message",
            "type": "string",
            "example": "Simpu",
            "maxLength": 11
          },
          "content": {
            "description": "Content of the SMS message, this is required if a template ID is not specified",
            "type": "string",
            "example": "Hello! World. This is a test message."
          },
          "template_id": {
            "description": "Template ID of the SMS message, this is required if content is not specified",
            "type": "string",
            "example": "674535b2b39158b9aae90188fcec23eb"
          },
          "personalisation": {
            "description": "Personalisation of the SMS message, this is applicable if a template ID is specified",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Personalisation"
            }
          },
          "external_ref": {
            "description": "This is a reference to the message in your system",
            "type": "string",
            "example": "674535b2b39158b9aae90188fcec23eb"
          },
          "is_trackable": {
            "description": "This determines if links in the message should be tracked, links in the message will be replaced with trackable links",
            "type": "boolean",
            "default": false,
            "example": false
          },
          "callback": {
            "description": "This is the URL to receive delivery reports for the message `test` ",
            "type": "string",
            "example": "https://example.com/sms/delivery_report"
          }
        },
        "required": [
          "recipients", "sender_id"
        ]
      },
      "EmailSendRequest": {
        "required": [
          "recipients",
          "sender_id"
        ],
        "type": "object",
        "properties": {
          "recipients": {
            "description": "Recipients of the Email, comma-separated list of emails",
            "type": "string",
            "example": "john@acme.com,mack@acme.com",
            "minLength": 4
          },
          "sender_id": {
              "description": "Sender ID of the Email",
              "type": "string",
              "example": "jane@acme.com"
          },
          "content": {
              "description": "Content of the Email , this is required if a template ID is not specified",
              "type": "string",
              "example": "Hello, this is just a test."
          },
          "from_name": {
              "description": "The name of the sender of the Email",
              "type": "string",
              "example": "John from Acme"
          },
          "subject": {
              "description": "Subject of the Email",
              "type": "string",
              "example": "This is a test!!!"
          },
          "reply_to": {
              "description": "The Email address a response should be sent to",
              "type": "string",
              "example": "no-reply@acme.com"
          },
          "external_ref": {
              "description": "This is a reference to the message in your system",
              "type": "string",
              "example": "674535b2b39158b9aae90188fcec23eb"
          },
          "callback": {
              "description": "This is the URL to receive delivery reports for the email",
              "type": "string",
              "example": "https://example.com/email/delivery_report"
          },
          "template_id": {
              "description": "Template ID of the Email, this is required if content is not specified",
              "type": "string",
              "example": "674535b2b39158b9aae90188fcec23eb"
          },
          "personalisation": {
            "description": "Personalisation of the Email ",
            "type": "array",
            "items": {
                "$ref": "#/components/schemas/PersonalisationEmail"
            }
          }
        }
      },
      "LookupPhoneRequest": {
        "required": [
          "phone"
        ],
        "type": "object",
        "properties": {
          "phone": {
            "description": "The phone number to be looked up",
            "type": "string",
            "example": "2348089672786"
          }
        }
      },
      "OTPTokenRequest": {
        "type": "object",
        "properties": {
          "recipient": {
            "description": "Recipient of the OTP token",
            "type": "string",
            "example": "2348023456789"
          },
          "length": {
            "description": "Length of the OTP token",
            "type": "number",
            "example": 6,
            "default": 4,
            "minimum": 4,
            "maximum": 8
          },
          "expires_in": {
            "description": "Time in minutes before the OTP token expires",
            "type": "number",
            "example": 30,
            "default": 15,
            "minimum": 1,
            "maximum": 60
          },
          "token": {
            "description": "The OTP token to send to the recipient, if not specified, a new token will be generated",
            "type": "string",
            "example": "123456"
          }
        },
        "required": [
          "recipient"
        ]
      },
      "OTPVerifyRequest": {
        "type": "object",
        "properties": {
          "token": {
            "description": "The OTP token to verify",
            "type": "string",
            "example": "123456"
          },
          "id": {
            "description": "The ID of the OTP token to verify",
            "type": "string",
            "example": "674535b2b39158b9aae90188fcec23eb"
          }
        },
        "required": [
          "token",
          "id"
        ]
      },
      "Error": {
        "required": [
          "status",
          "message"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Invalid request"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string",
                  "example": "name"
                },
                "message": {
                  "type": "string",
                  "example": "Error in field: 'name' Field required."
                },
                "type": {
                  "type": "string",
                  "example": "missing"
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "An API key to authenticate requests"
      }
    }
  }
}